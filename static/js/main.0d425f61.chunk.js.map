{"version":3,"sources":["index.js"],"names":["App","state","width","window","innerWidth","height","innerHeight","detectFrame","video","model","detect","then","predictions","_this","renderPredictions","requestAnimationFrame","ctx","document","getElementById","getContext","clearRect","canvas","font","textBaseline","forEach","prediction","x","bbox","y","strokeStyle","lineWidth","strokeRect","fillStyle","textWidth","measureText","class","textHeight","parseInt","fillRect","fillText","_this2","this","webCamPromise","navigator","mediaDevices","getUserMedia","audio","facingMode","stream","srcObject","Promise","resolve","reject","onloadedmetadata","play","modelPromise","cocoSsd","all","values","console","log","_this3","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","react_media__WEBPACK_IMPORTED_MODULE_9__","query","maxWidth","matches","react_particles_js__WEBPACK_IMPORTED_MODULE_7___default","params","particles","number","value","density","enable","color","shape","type","stroke","size","random","anim","speed","size_min","line_linked","move","direction","out_mode","interactivity","events","onhover","mode","onclick","modes","bubble","distance","duration","opacity","repulse","id","React","Component","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.0d425f61.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Particles from 'react-particles-js';\nimport * as cocoSsd from \"@tensorflow-models/coco-ssd\";\nimport Media from 'react-media';\nimport \"@tensorflow/tfjs\";\nimport \"./index.css\";\n\nclass App extends React.Component {\n  state = { width: window.innerWidth, height: window.innerHeight }\n\n\n  componentDidMount() {\n    if(this.state.width <= 480 ){\n      const video = document.getElementById(\"video\");\n      const webCamPromise = navigator.mediaDevices\n        .getUserMedia({\n          audio: false,\n          video: {\n            facingMode: \"user\",\n            width: this.state.width,\n            height: this.state.height\n          }\n        })\n        .then(stream => {\n          video.srcObject = stream;\n          return new Promise((resolve, reject) => {\n            video.onloadedmetadata = () => {\n              video.play();\n              resolve();\n            };\n          });\n        });\n      const modelPromise = cocoSsd.load();\n      Promise.all([modelPromise, webCamPromise]).then(values => {\n        this.detectFrame(video, values[0]);\n      });\n      console.log(\"SMALL DEVICE\")\n      console.log(this.state.width)\n      console.log(this.state.height)\n    }else{\n      const video = document.getElementById(\"video\");\n      const webCamPromise = navigator.mediaDevices\n        .getUserMedia({\n          audio: false,\n          video: {\n            facingMode: \"user\",\n            width: this.state.width,\n            height: this.state.height / 1.1\n          }\n        })\n        .then(stream => {\n          video.srcObject = stream;\n          return new Promise((resolve, reject) => {\n            video.onloadedmetadata = () => {\n              video.play();\n              resolve();\n            };\n          });\n        });\n      const modelPromise = cocoSsd.load();\n      Promise.all([modelPromise, webCamPromise]).then(values => {\n        this.detectFrame(video, values[0]);\n      });\n      console.log(\"LARGE DEVICE\")\n      console.log(this.state.width)\n      console.log(this.state.height)\n    }\n\n  }\n\n  detectFrame = (video, model) => {\n    model.detect(video).then(predictions => {\n      this.renderPredictions(predictions);\n      requestAnimationFrame(() => {\n        this.detectFrame(video, model);\n      });\n    });\n  };\n\n  renderPredictions = predictions => {\n    const c = document.getElementById(\"canvas\");\n    const ctx = c.getContext(\"2d\");\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    // Font options.\n    const font = \"25px Noto Sans\";\n    ctx.font = font;\n    ctx.textBaseline = \"top\";\n    predictions.forEach(prediction => {\n      const x = prediction.bbox[0];\n      const y = prediction.bbox[1];\n      const width = prediction.bbox[2];\n      const height = prediction.bbox[3];\n      // Draw the bounding box.\n      ctx.strokeStyle = \"#e74c3c\";\n      ctx.lineWidth = 4;\n      ctx.strokeRect(x, y, width, height);\n      // Draw the label background.\n      ctx.fillStyle = \"#e74c3c\";\n      const textWidth = ctx.measureText(prediction.class).width;\n      const textHeight = parseInt(font, 20); // base 10\n      ctx.fillRect(x, y, textWidth + 4, textHeight + 4);\n    });\n\n    predictions.forEach(prediction => {\n      const x = prediction.bbox[0];\n      const y = prediction.bbox[1];\n      // Draw the text last to ensure it's on top.\n      ctx.fillStyle = \"#FFFFFF\";\n      ctx.fillText(prediction.class, x, y);\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Media query={{ maxWidth: 480 }}>\n          {matches => matches ? (\n            <div>\n              <Particles\n                params={{\n                  \"particles\": {\n                    \"number\": {\n                      \"value\": 160,\n                      \"density\": {\n                        \"enable\": false\n                      }\n                    },\n                    \"color\": {\n                      \"value\": [\"#f1c40f\", \"#B8E986\", \"#50E3C2\", \"#FFD300\", \"#E86363\", \"#e74c3c\"]\n                    },\n                    \"shape\": {\n                      \"type\": \"circle\",\n                      \"stroke\": {\n                        \"width\": 0,\n                        \"color\": \"#e74c3c\"\n                      }\n                    },\n                    \"size\": {\n                      \"value\": 3,\n                      \"random\": true,\n                      \"anim\": {\n                        \"speed\": 4,\n                        \"size_min\": 0.3\n                      }\n                    },\n                    \"line_linked\": {\n                      \"enable\": false\n                    },\n                    \"move\": {\n                      \"random\": true,\n                      \"speed\": 1,\n                      \"direction\": \"top\",\n                      \"out_mode\": \"out\"\n                    }\n                  },\n                  \"interactivity\": {\n                    \"events\": {\n                      \"onhover\": {\n                        \"enable\": true,\n                        \"mode\": \"bubble\"\n                      },\n                      \"onclick\": {\n                        \"enable\": true,\n                        \"mode\": \"repulse\"\n                      }\n                    },\n                    \"modes\": {\n                      \"bubble\": {\n                        \"distance\": 250,\n                        \"duration\": 2,\n                        \"size\": 0,\n                        \"opacity\": 0\n                      },\n                      \"repulse\": {\n                        \"distance\": 400,\n                        \"duration\": 4\n                      }\n                    }\n                  }\n                }} />\n              <video id=\"video\" className=\"higher\" width={this.state.width} height={this.state.height} />\n              <canvas id=\"canvas\" className=\"higher\" width={this.state.width} height={this.state.height} />\n            </div>\n          ) : (\n\n              <div>\n                <Particles\n                  params={{\n                    \"particles\": {\n                      \"number\": {\n                        \"value\": 160,\n                        \"density\": {\n                          \"enable\": false\n                        }\n                      },\n                      \"color\": {\n                        \"value\": [\"#f1c40f\", \"#B8E986\", \"#50E3C2\", \"#FFD300\", \"#E86363\", \"#e74c3c\"]\n                      },\n                      \"shape\": {\n                        \"type\": \"circle\",\n                        \"stroke\": {\n                          \"width\": 0,\n                          \"color\": \"#e74c3c\"\n                        }\n                      },\n                      \"size\": {\n                        \"value\": 3,\n                        \"random\": true,\n                        \"anim\": {\n                          \"speed\": 4,\n                          \"size_min\": 0.3\n                        }\n                      },\n                      \"line_linked\": {\n                        \"enable\": false\n                      },\n                      \"move\": {\n                        \"random\": true,\n                        \"speed\": 1,\n                        \"direction\": \"top\",\n                        \"out_mode\": \"out\"\n                      }\n                    },\n                    \"interactivity\": {\n                      \"events\": {\n                        \"onhover\": {\n                          \"enable\": true,\n                          \"mode\": \"bubble\"\n                        },\n                        \"onclick\": {\n                          \"enable\": true,\n                          \"mode\": \"repulse\"\n                        }\n                      },\n                      \"modes\": {\n                        \"bubble\": {\n                          \"distance\": 250,\n                          \"duration\": 2,\n                          \"size\": 0,\n                          \"opacity\": 0\n                        },\n                        \"repulse\": {\n                          \"distance\": 400,\n                          \"duration\": 4\n                        }\n                      }\n                    }\n                  }} />\n                <video id=\"video\" className=\"higher\" width={this.state.width} height={this.state.height / 1.1} />\n                <canvas id=\"canvas\" className=\"higher\" width={this.state.width} height={this.state.height / 1.1} />\n              </div>\n            )\n          }\n        </Media>\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}